var tipuesearch = {"pages": [{'title': 'week', 'text': '', 'tags': '', 'url': 'week.html'}, {'title': 'week1~4', 'text': 'week1 \n 建立倉儲\xa0 \xa0 \n week2 \n 分組作業\xa0 亂數分組 \n 先到about->grouping-> Dart source code for random grouping \n 裡面左上有三行分別是Dart Html Css \n 點Html，把第二行的網址改掉，改成 https://s1.mde.nfu.edu.tw:7443/?semester=1082&courseno=0780 乙班名單，就完成了。 \n ps:dart不支援http，記得要用https \n 可攜式升3.8.2 \n 下載:1.Windows x86-64 executable installer \n \xa0\xa0\xa0\xa0 2. full 64-bit download \n \xa0\xa0\xa0\xa0 3. msys2-x86_64-20190524.exe \n \xa0\xa0\xa0\xa0 4.64-bit Git for Windows Portable \n \xa0 \xa0\xa0\xa0建立一個資料夾cd20，在裡面再新增一個資料夾data，再新增的資料夾裡再新增一個資料夾py382 \n \xa0\xa0 \xa0\xa0把下載1扔進py382裡面，2扔去data並且改名為wscite，3丟去data裡面，在data裡面再建一個資料夾portablegit (portablegit跟py382在同一個資料夾裡)把4丟進portablegit。 \n \xa0\xa0\xa0\xa0 編譯SciTE，啟動SciTE後Options->Open Global Option File \n 開行數，把139跟300前的#去掉，在301行前加上#。 \n 用SciTE建立新的start.bat \n 建立stop.bat \n \n 到 https://bootstrap.pypa.io/get-pip.py 裡，直接另存新檔到data裡 \n 執行star.bat \n 執行這兩行指令python get-pip.py跟pip install flask bs4 lxml pelican markdown flask_cors leo \n week3 \n 一部分翻譯，在倉儲的downloads裡面 \n week4 \n \n', 'tags': '', 'url': 'week1~4.html'}, {'title': 'week5~8', 'text': '', 'tags': '', 'url': 'week5~8.html'}, {'title': 'week9~12', 'text': '', 'tags': '', 'url': 'week9~12.html'}, {'title': 'week13~16', 'text': '', 'tags': '', 'url': 'week13~16.html'}, {'title': 'About', 'text': '此內容管理系統以\xa0 https://github.com/mdecourse/cmsimde \xa0作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作. \n 利用 cmsimde 建立靜態網誌方法: \n 1. 在 github 建立倉儲, git clone 到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms , 加入除了 cmsimde 目錄外的所有內容 \n 以 git submodule add\xa0 https://github.com/mdecourse/cmsimde \xa0cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n 4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules  https://github.com/mdecourse/newcms.git \n', 'tags': '', 'url': 'About.html'}, {'title': 'Develop', 'text': 'https://github.com/mdecourse/cmsimde \xa0的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443\xa0就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容. \n cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版. \n init.py 位於\xa0 up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.', 'tags': '', 'url': 'Develop.html'}]};