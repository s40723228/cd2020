<h1>week</h1>
<h2>week1~4</h2>
<p>week1</p>
<p>建立倉儲   </p>
<p>week2</p>
<p>分組作業  亂數分組</p>
<p>先到about-&gt;grouping-&gt;<a href="https://dartpad.github.io/embed-html.html?gh_owner=mdecourse&amp;gh_repo=cd2020&amp;gh_path=downloads/dart_ex/even_grouping&amp;theme=dark">Dart source code for random grouping</a></p>
<p>裡面左上有三行分別是Dart Html Css</p>
<p>點Html，把第二行的網址改掉，改成<a href="https://s1.mde.nfu.edu.tw:7443/?semester=1082&amp;courseno=0780" target="_blank">https://s1.mde.nfu.edu.tw:7443/?semester=1082&amp;courseno=0780</a>乙班名單，就完成了。</p>
<p>ps:dart不支援http，記得要用https</p>
<p>可攜式升3.8.2</p>
<p>下載:1.Windows x86-64 executable installer</p>
<p>     2.<a href="https://www.scintilla.org/wscite432.zip">full 64-bit download</a></p>
<p>     3.<a href="http://repo.msys2.org/distrib/x86_64/msys2-x86_64-20190524.exe">msys2-x86_64-20190524.exe</a></p>
<p><strong>     4.64-bit Git for Windows Portable</strong></p>
<p>     建立一個資料夾cd20，在裡面再新增一個資料夾data，再新增的資料夾裡再新增一個資料夾py382</p>
<p>     把下載1扔進py382裡面，2扔去data並且改名為wscite，3丟去data裡面，在data裡面再建一個資料夾portablegit (portablegit跟py382在同一個資料夾裡)把4丟進portablegit。</p>
<p>     編譯SciTE，啟動SciTE後Options-&gt;Open Global Option File</p>
<p>開行數，把139跟300前的#去掉，在301行前加上#。</p>
<p>用SciTE建立新的start.bat<img alt="" height="695" src="/images/STAR.png" width="850"/></p>
<p>建立stop.bat</p>
<p><img alt="" height="308" src="/images/STOP.png" width="529"/></p>
<p>到<a href="https://bootstrap.pypa.io/get-pip.py">https://bootstrap.pypa.io/get-pip.py</a>裡，直接另存新檔到data裡</p>
<p>執行star.bat</p>
<p>執行這兩行指令python get-pip.py跟pip install flask bs4 lxml pelican markdown flask_cors leo</p>
<p>week3</p>
<p>一部分翻譯，在倉儲的downloads裡面</p>
<p>week4</p>
<p></p>
<h2>week5~8</h2>
<h2>week9~12</h2>
<h2>week13~16</h2>
<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>